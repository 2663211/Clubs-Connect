{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs Connect\\\\Clubs-Connect\\\\src\\\\components\\\\ExecPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport '../styles/ExecPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExecPost({\n  entityId\n}) {\n  _s();\n  const [caption, setCaption] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch logged-in user\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      setUser(user);\n    };\n    fetchUser();\n    const {\n      data: listener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    });\n    return () => listener.subscription.unsubscribe();\n  }, []);\n  const handleFileChange = e => setFile(e.target.files[0]);\n  const handleSubmit = async () => {\n    if (!user) return alert(\"You must be logged in to post.\");\n    if (!caption.trim() && !file) return alert(\"Please add a caption or select a file.\");\n    setLoading(true);\n    try {\n      let mediaUrl = null;\n      let mediaType = null;\n\n      // Only process file if one was selected\n      if (file) {\n        // 1. Upload file to Supabase Storage\n        const fileExt = file.name.split(\".\").pop();\n        const filePath = `${user.id}/${Date.now()}.${fileExt}`;\n        const {\n          error: uploadError\n        } = await supabase.storage.from(\"media\").upload(filePath, file);\n        if (uploadError) throw uploadError;\n        const {\n          data\n        } = supabase.storage.from(\"media\").getPublicUrl(filePath);\n        mediaUrl = data.publicUrl;\n        mediaType = file.type.startsWith(\"image\") ? \"image\" : file.type.startsWith(\"video\") ? \"video\" : \"audio\";\n      }\n\n      // 2. Insert post with entityId\n      const {\n        error: insertError\n      } = await supabase.from(\"posts\").insert([{\n        caption: caption.trim(),\n        media_url: mediaUrl,\n        media_type: mediaType,\n        cso_id: entityId\n      }]);\n      if (insertError) throw insertError;\n      alert(\"Post created successfully!\");\n      setCaption(\"\");\n      setFile(null);\n      // Instead of reloading the page, you might want to use a state update\n      window.location.reload(); // Refresh to show new post\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating post: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClearFile = () => {\n    setFile(null);\n    // Reset the file input\n    const fileInput = document.querySelector('.post-file-input');\n    if (fileInput) fileInput.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exec-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Write your caption... (optional if adding a file)\",\n      value: caption,\n      onChange: e => setCaption(e.target.value),\n      rows: 4,\n      className: \"post-caption-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"file-upload-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"upload-icon\",\n          children: \"\\uD83D\\uDCC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), file ? \"Change File\" : \"Add File (optional)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        onChange: handleFileChange,\n        className: \"post-file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-name\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleClearFile,\n          className: \"clear-file-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading,\n      className: \"post-submit-button\",\n      children: loading ? \"Posting...\" : \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ExecPost, \"ShL49UbvnoSmQOCGXzq0Q6nykhw=\");\n_c = ExecPost;\nvar _c;\n$RefreshReg$(_c, \"ExecPost\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","ExecPost","entityId","_s","caption","setCaption","file","setFile","user","setUser","loading","setLoading","fetchUser","data","auth","getUser","listener","onAuthStateChange","_event","session","subscription","unsubscribe","handleFileChange","e","target","files","handleSubmit","alert","trim","mediaUrl","mediaType","fileExt","name","split","pop","filePath","id","Date","now","error","uploadError","storage","from","upload","getPublicUrl","publicUrl","type","startsWith","insertError","insert","media_url","media_type","cso_id","window","location","reload","err","console","message","handleClearFile","fileInput","document","querySelector","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","rows","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Programming/Clubs Connect/Clubs-Connect/src/components/ExecPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../supabaseClient\";\r\nimport '../styles/ExecPost.css';\r\n\r\nexport default function ExecPost({ entityId }) {\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch logged-in user\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      setUser(user);\r\n    };\r\n    fetchUser();\r\n\r\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      setUser(session?.user || null);\r\n    });\r\n\r\n    return () => listener.subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => setFile(e.target.files[0]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!user) return alert(\"You must be logged in to post.\");\r\n    if (!caption.trim() && !file) return alert(\"Please add a caption or select a file.\");\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      let mediaUrl = null;\r\n      let mediaType = null;\r\n\r\n      // Only process file if one was selected\r\n      if (file) {\r\n        // 1. Upload file to Supabase Storage\r\n        const fileExt = file.name.split(\".\").pop();\r\n        const filePath = `${user.id}/${Date.now()}.${fileExt}`;\r\n\r\n        const { error: uploadError } = await supabase.storage\r\n          .from(\"media\")\r\n          .upload(filePath, file);\r\n\r\n        if (uploadError) throw uploadError;\r\n\r\n        const { data } = supabase.storage.from(\"media\").getPublicUrl(filePath);\r\n        mediaUrl = data.publicUrl;\r\n\r\n        mediaType = file.type.startsWith(\"image\")\r\n          ? \"image\"\r\n          : file.type.startsWith(\"video\")\r\n          ? \"video\"\r\n          : \"audio\";\r\n      }\r\n\r\n      // 2. Insert post with entityId\r\n      const { error: insertError } = await supabase.from(\"posts\").insert([\r\n        {\r\n          caption: caption.trim(),\r\n          media_url: mediaUrl,\r\n          media_type: mediaType,\r\n          cso_id: entityId\r\n        }\r\n      ]);\r\n\r\n      if (insertError) throw insertError;\r\n\r\n      alert(\"Post created successfully!\");\r\n      setCaption(\"\");\r\n      setFile(null);\r\n      // Instead of reloading the page, you might want to use a state update\r\n      window.location.reload(); // Refresh to show new post\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error creating post: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClearFile = () => {\r\n    setFile(null);\r\n    // Reset the file input\r\n    const fileInput = document.querySelector('.post-file-input');\r\n    if (fileInput) fileInput.value = '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"exec-post\">\r\n      <h3>Create Post</h3>\r\n\r\n      <textarea\r\n        placeholder=\"Write your caption... (optional if adding a file)\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n        rows={4}\r\n        className=\"post-caption-input\"\r\n      />\r\n\r\n      <div className=\"file-input-container\">\r\n        <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n          <span className=\"upload-icon\">📁</span>\r\n          {file ? \"Change File\" : \"Add File (optional)\"}\r\n        </label>\r\n        <input \r\n          id=\"file-upload\"\r\n          type=\"file\" \r\n          onChange={handleFileChange} \r\n          className=\"post-file-input\"\r\n        />\r\n        \r\n        {file && (\r\n          <div className=\"file-preview\">\r\n            <span className=\"file-name\">{file.name}</span>\r\n            <button \r\n              type=\"button\" \r\n              onClick={handleClearFile}\r\n              className=\"clear-file-button\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={loading}\r\n        className=\"post-submit-button\"\r\n      >\r\n        {loading ? \"Posting...\" : \"Create Post\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}