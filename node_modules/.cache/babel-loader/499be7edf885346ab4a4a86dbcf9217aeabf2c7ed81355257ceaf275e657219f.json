{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs Connect\\\\Clubs-Connect\\\\src\\\\components\\\\CSOPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../supabaseClient\";\nimport '../styles/CSOPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EntityPage() {\n  _s();\n  const {\n    entityId\n  } = useParams();\n  const navigate = useNavigate();\n  const [caption, setCaption] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [logo, setLogo] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const [entityData, setEntityData] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [isSGO, setIsSGO] = useState(false);\n  const [isExecutive, setIsExecutive] = useState(false);\n\n  // Fetch logged-in user and check roles\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      setUser(user);\n      if (user) {\n        // Check if user is SGO\n        const {\n          data: sgoData,\n          error: sgoError\n        } = await supabase.from(\"SGO\").select(\"SGO_ID\").eq(\"staff_number\", user.id).maybeSingle();\n        if (sgoData) {\n          setIsSGO(true);\n          setUserRole(\"sgo\");\n        } else {\n          // Check if user is executive\n          const {\n            data: execData,\n            error: execError\n          } = await supabase.from(\"executive\").select(\"execID\").eq(\"student_number\", user.id).maybeSingle();\n          if (execData) {\n            setIsExecutive(true);\n            setUserRole(\"executive\");\n\n            // Check if this executive can post to this entity\n            const {\n              data: csoExecData,\n              error: csoExecError\n            } = await supabase.from(\"CSO_exec\").select(\"can_post\").eq(\"execID\", execData.execID).eq(\"CSO_ID\", entityId).maybeSingle();\n            if (csoExecData && csoExecData.can_post) {\n              // User can post to this entity\n            } else {\n              // User doesn't have posting rights for this entity\n            }\n          } else {\n            setUserRole(\"student\");\n          }\n        }\n      }\n    };\n    fetchUser();\n    const {\n      data: listener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    });\n    return () => listener.subscription.unsubscribe();\n  }, [entityId]);\n\n  // Fetch entity data\n  useEffect(() => {\n    const fetchEntityData = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from(\"CSO\").select(\"*\").eq(\"CSO_ID\", entityId).single();\n        if (error) throw error;\n        setEntityData(data);\n        setName(data.name);\n        setLogo(data.logo);\n      } catch (err) {\n        console.error(\"Error fetching entity data:\", err);\n      }\n    };\n    if (entityId) {\n      fetchEntityData();\n    }\n  }, [entityId]);\n\n  // Fetch posts for this specific entity\n  const fetchPosts = async () => {\n    setLoadingPosts(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"posts\").select(\"*\").eq(\"CSO_ID\", entityId) // Filter by entity ID\n      .order(\"date_posted\", {\n        ascending: false\n      });\n      if (error) {\n        console.error(\"Error fetching posts:\", error);\n      } else {\n        setPosts(data || []);\n      }\n    } catch (err) {\n      console.error(\"Error in fetchPosts:\", err);\n    } finally {\n      setLoadingPosts(false);\n    }\n  };\n  useEffect(() => {\n    if (entityId) {\n      fetchPosts();\n    }\n  }, [entityId]);\n  const handleFileChange = e => setFile(e.target.files[0]);\n  const handleSubmit = async () => {\n    if (!user) return alert(\"You must be logged in to post.\");\n    if (!file) return alert(\"Please select a file.\");\n    if (!entityId) return alert(\"No entity selected.\");\n\n    // Check if user has permission to post (SGO or executive with can_post)\n    if (!isSGO && !isExecutive) {\n      return alert(\"You don't have permission to post to this entity.\");\n    }\n    setLoading(true);\n    try {\n      const fileExt = file.name.split(\".\").pop();\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\n      const {\n        error: uploadError\n      } = await supabase.storage.from(\"media\").upload(filePath, file);\n      if (uploadError) throw uploadError;\n      const {\n        data\n      } = supabase.storage.from(\"media\").getPublicUrl(filePath);\n      const mediaUrl = data.publicUrl;\n      const mediaType = file.type.startsWith(\"image\") ? \"image\" : file.type.startsWith(\"video\") ? \"video\" : \"audio\";\n\n      // Get execID if user is executive\n      let execID = null;\n      if (isExecutive) {\n        const {\n          data: execData\n        } = await supabase.from(\"executive\").select(\"execID\").eq(\"student_number\", user.id).single();\n        execID = execData.execID;\n      }\n      const {\n        error: insertError\n      } = await supabase.from(\"posts\").insert([{\n        caption,\n        media_url: mediaUrl,\n        media_type: mediaType,\n        CSO_ID: entityId,\n        execID: execID,\n        date_posted: new Date().toISOString()\n      }]);\n      if (insertError) throw insertError;\n      alert(\"Post created successfully!\");\n      setCaption(\"\");\n      setFile(null);\n      fetchPosts();\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating post: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeletePost = async postId => {\n    if (!isSGO) {\n      alert(\"Only SGO members can delete posts.\");\n      return;\n    }\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\n      try {\n        const {\n          error\n        } = await supabase.from(\"posts\").delete().eq(\"postID\", postId);\n        if (error) throw error;\n        alert(\"Post deleted successfully!\");\n        fetchPosts();\n      } catch (err) {\n        console.error(\"Error deleting post:\", err);\n        alert(\"Failed to delete post.\");\n      }\n    }\n  };\n  const handleEditEntity = () => {\n    navigate(`/entities/edit/${entityId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entity-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post-container\",\n      children: [(name || logo) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entity-header\",\n        children: [logo && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: `${name} logo`,\n          className: \"entity-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entity-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Civil Society Organization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), isSGO && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditEntity,\n            className: \"edit-entity-btn\",\n            children: \"Edit Entity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), (isSGO || isExecutive) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your caption...\",\n          value: caption,\n          onChange: e => setCaption(e.target.value),\n          rows: 4,\n          className: \"caption-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: loading,\n          className: \"post-button\",\n          children: loading ? \"Posting...\" : \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), loadingPosts ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item\",\n          children: [post.caption && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 34\n          }, this), post.media_url && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-media\",\n            children: [post.media_type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.media_url,\n              alt: \"Post content\",\n              className: \"post-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 23\n            }, this), post.media_type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              className: \"post-video\",\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: post.media_url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 23\n            }, this), post.media_type === \"audio\" && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: post.media_url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-date\",\n            children: new Date(post.date_posted).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), isSGO && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletePost(post.postID),\n            className: \"delete-post-btn\",\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this)]\n        }, post.postID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(EntityPage, \"Xfxddszl9fzXruZv8ACYLCWp/Ao=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EntityPage;\nvar _c;\n$RefreshReg$(_c, \"EntityPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","EntityPage","_s","entityId","navigate","caption","setCaption","file","setFile","user","setUser","loading","setLoading","logo","setLogo","name","setName","posts","setPosts","loadingPosts","setLoadingPosts","entityData","setEntityData","userRole","setUserRole","isSGO","setIsSGO","isExecutive","setIsExecutive","fetchUser","data","auth","getUser","sgoData","error","sgoError","from","select","eq","id","maybeSingle","execData","execError","csoExecData","csoExecError","execID","can_post","listener","onAuthStateChange","_event","session","subscription","unsubscribe","fetchEntityData","single","err","console","fetchPosts","order","ascending","handleFileChange","e","target","files","handleSubmit","alert","fileExt","split","pop","filePath","Date","now","uploadError","storage","upload","getPublicUrl","mediaUrl","publicUrl","mediaType","type","startsWith","insertError","insert","media_url","media_type","CSO_ID","date_posted","toISOString","message","handleDeletePost","postId","window","confirm","delete","handleEditEntity","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","rows","disabled","length","map","post","controls","toLocaleString","postID","_c","$RefreshReg$"],"sources":["C:/Programming/Clubs Connect/Clubs-Connect/src/components/CSOPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { supabase } from \"../supabaseClient\";\r\nimport '../styles/CSOPage.css';\r\n\r\nexport default function EntityPage() {\r\n  const { entityId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [logo, setLogo] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [loadingPosts, setLoadingPosts] = useState(false);\r\n  const [entityData, setEntityData] = useState(null);\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [isSGO, setIsSGO] = useState(false);\r\n  const [isExecutive, setIsExecutive] = useState(false);\r\n\r\n  // Fetch logged-in user and check roles\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      setUser(user);\r\n      \r\n      if (user) {\r\n        // Check if user is SGO\r\n        const { data: sgoData, error: sgoError } = await supabase\r\n          .from(\"SGO\")\r\n          .select(\"SGO_ID\")\r\n          .eq(\"staff_number\", user.id)\r\n          .maybeSingle();\r\n        \r\n        if (sgoData) {\r\n          setIsSGO(true);\r\n          setUserRole(\"sgo\");\r\n        } else {\r\n          // Check if user is executive\r\n          const { data: execData, error: execError } = await supabase\r\n            .from(\"executive\")\r\n            .select(\"execID\")\r\n            .eq(\"student_number\", user.id)\r\n            .maybeSingle();\r\n          \r\n          if (execData) {\r\n            setIsExecutive(true);\r\n            setUserRole(\"executive\");\r\n            \r\n            // Check if this executive can post to this entity\r\n            const { data: csoExecData, error: csoExecError } = await supabase\r\n              .from(\"CSO_exec\")\r\n              .select(\"can_post\")\r\n              .eq(\"execID\", execData.execID)\r\n              .eq(\"CSO_ID\", entityId)\r\n              .maybeSingle();\r\n            \r\n            if (csoExecData && csoExecData.can_post) {\r\n              // User can post to this entity\r\n            } else {\r\n              // User doesn't have posting rights for this entity\r\n            }\r\n          } else {\r\n            setUserRole(\"student\");\r\n          }\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchUser();\r\n\r\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      setUser(session?.user || null);\r\n    });\r\n\r\n    return () => listener.subscription.unsubscribe();\r\n  }, [entityId]);\r\n\r\n  // Fetch entity data\r\n  useEffect(() => {\r\n    const fetchEntityData = async () => {\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from(\"CSO\")\r\n          .select(\"*\")\r\n          .eq(\"CSO_ID\", entityId)\r\n          .single();\r\n\r\n        if (error) throw error;\r\n        \r\n        setEntityData(data);\r\n        setName(data.name);\r\n        setLogo(data.logo);\r\n      } catch (err) {\r\n        console.error(\"Error fetching entity data:\", err);\r\n      }\r\n    };\r\n\r\n    if (entityId) {\r\n      fetchEntityData();\r\n    }\r\n  }, [entityId]);\r\n\r\n  // Fetch posts for this specific entity\r\n  const fetchPosts = async () => {\r\n    setLoadingPosts(true);\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"posts\")\r\n        .select(\"*\")\r\n        .eq(\"CSO_ID\", entityId) // Filter by entity ID\r\n        .order(\"date_posted\", { ascending: false });\r\n\r\n      if (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      } else {\r\n        setPosts(data || []);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error in fetchPosts:\", err);\r\n    } finally {\r\n      setLoadingPosts(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (entityId) {\r\n      fetchPosts();\r\n    }\r\n  }, [entityId]);\r\n\r\n  const handleFileChange = (e) => setFile(e.target.files[0]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!user) return alert(\"You must be logged in to post.\");\r\n    if (!file) return alert(\"Please select a file.\");\r\n    if (!entityId) return alert(\"No entity selected.\");\r\n    \r\n    // Check if user has permission to post (SGO or executive with can_post)\r\n    if (!isSGO && !isExecutive) {\r\n      return alert(\"You don't have permission to post to this entity.\");\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const fileExt = file.name.split(\".\").pop();\r\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\r\n\r\n      const { error: uploadError } = await supabase.storage\r\n        .from(\"media\")\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      const { data } = supabase.storage.from(\"media\").getPublicUrl(filePath);\r\n      const mediaUrl = data.publicUrl;\r\n\r\n      const mediaType = file.type.startsWith(\"image\")\r\n        ? \"image\"\r\n        : file.type.startsWith(\"video\")\r\n        ? \"video\"\r\n        : \"audio\";\r\n\r\n      // Get execID if user is executive\r\n      let execID = null;\r\n      if (isExecutive) {\r\n        const { data: execData } = await supabase\r\n          .from(\"executive\")\r\n          .select(\"execID\")\r\n          .eq(\"student_number\", user.id)\r\n          .single();\r\n        \r\n        execID = execData.execID;\r\n      }\r\n\r\n      const { error: insertError } = await supabase.from(\"posts\").insert([\r\n        {\r\n          caption,\r\n          media_url: mediaUrl,\r\n          media_type: mediaType,\r\n          CSO_ID: entityId,\r\n          execID: execID,\r\n          date_posted: new Date().toISOString()\r\n        }\r\n      ]);\r\n\r\n      if (insertError) throw insertError;\r\n\r\n      alert(\"Post created successfully!\");\r\n      setCaption(\"\");\r\n      setFile(null);\r\n      fetchPosts();\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error creating post: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async (postId) => {\r\n    if (!isSGO) {\r\n      alert(\"Only SGO members can delete posts.\");\r\n      return;\r\n    }\r\n\r\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\r\n      try {\r\n        const { error } = await supabase\r\n          .from(\"posts\")\r\n          .delete()\r\n          .eq(\"postID\", postId);\r\n\r\n        if (error) throw error;\r\n\r\n        alert(\"Post deleted successfully!\");\r\n        fetchPosts();\r\n      } catch (err) {\r\n        console.error(\"Error deleting post:\", err);\r\n        alert(\"Failed to delete post.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditEntity = () => {\r\n    navigate(`/entities/edit/${entityId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"entity-page-container\">\r\n      <div className=\"create-post-container\">\r\n        {(name || logo) && (\r\n          <div className=\"entity-header\">\r\n            {logo && (\r\n              <img \r\n                src={logo} \r\n                alt={`${name} logo`}\r\n                className=\"entity-logo\"\r\n              />\r\n            )}\r\n            {name && (\r\n              <div className=\"entity-info\">\r\n                <h3>{name}</h3>\r\n                <p>Civil Society Organization</p>\r\n                {isSGO && (\r\n                  <button \r\n                    onClick={handleEditEntity}\r\n                    className=\"edit-entity-btn\"\r\n                  >\r\n                    Edit Entity\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {(isSGO || isExecutive) && (\r\n          <>\r\n            <h2>Create Post</h2>\r\n\r\n            <textarea\r\n              placeholder=\"Write your caption...\"\r\n              value={caption}\r\n              onChange={(e) => setCaption(e.target.value)}\r\n              rows={4}\r\n              className=\"caption-textarea\"\r\n            />\r\n\r\n            <input \r\n              type=\"file\" \r\n              onChange={handleFileChange} \r\n              className=\"file-input\" \r\n            />\r\n\r\n            <button\r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n              className=\"post-button\"\r\n            >\r\n              {loading ? \"Posting...\" : \"Post\"}\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"posts-container\">\r\n        <h2>Posts</h2>\r\n        {loadingPosts ? (\r\n          <p>Loading posts...</p>\r\n        ) : posts.length === 0 ? (\r\n          <p>No posts yet.</p>\r\n        ) : (\r\n          <div>\r\n            {posts.map((post) => (\r\n              <div key={post.postID} className=\"post-item\">\r\n                {post.caption && <p>{post.caption}</p>}\r\n                \r\n                {post.media_url && (\r\n                  <div className=\"post-media\">\r\n                    {post.media_type === \"image\" && (\r\n                      <img src={post.media_url} alt=\"Post content\" className=\"post-image\" />\r\n                    )}\r\n                    {post.media_type === \"video\" && (\r\n                      <video controls className=\"post-video\">\r\n                        <source src={post.media_url} />\r\n                      </video>\r\n                    )}\r\n                    {post.media_type === \"audio\" && (\r\n                      <audio controls>\r\n                        <source src={post.media_url} />\r\n                      </audio>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                <p className=\"post-date\">{new Date(post.date_posted).toLocaleString()}</p>\r\n                \r\n                {isSGO && (\r\n                  <button \r\n                    onClick={() => handleDeletePost(post.postID)}\r\n                    className=\"delete-post-btn\"\r\n                  >\r\n                    Delete Post\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}