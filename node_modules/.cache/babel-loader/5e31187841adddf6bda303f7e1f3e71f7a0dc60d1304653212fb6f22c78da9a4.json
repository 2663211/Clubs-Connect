{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs Connect\\\\Clubs-Connect\\\\src\\\\components\\\\StudentProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport StudentHeader from './StudentHeader';\nimport { useNavigate } from 'react-router-dom';\nimport coverPhoto from '../images/coverPhoto.jpeg';\nimport profilePhoto from '../images/ProfilePhoto.jpeg';\nimport coverPhoto2 from '../images/coverPhoto2.png';\nimport '../styles/StudentProfile.css';\nimport edit from '../images/icons8-edit-50.png';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StudentProfile() {\n  _s();\n  const navigate = useNavigate();\n  const [userInfo, setUserInfo] = useState({\n    name: 'Mmakwena',\n    about: '',\n    coverPic: coverPhoto2,\n    profilePic: profilePhoto\n  });\n  const [user, setUser] = useState(null);\n\n  //fetching the necessary data from supabase\n  //fetching profile/user data\n  const fetchProfile = async userId => {\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').select('full_name, bio,avatar_url,cover_url').eq('id', userId).single();\n    if (error) {\n      console.error('Error fetching profile:', error);\n      return null;\n    }\n    return data;\n  };\n\n  //setting what is in the database to the profile\n  useEffect(() => {\n    const loadProfile = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\n      if (!user) return;\n      setUser(user);\n      const profile = await fetchProfile(user.id);\n      if (profile) {\n        setUserInfo({\n          name: profile.full_name || 'Unnamed User',\n          about: profile.bio || '',\n          coverPic: profile.cover_url || coverPhoto2,\n          profilePic: profile.avatar_url || profilePhoto\n        });\n        setEditData({\n          name: profile.full_name || 'Unnamed User',\n          about: profile.bio || '',\n          coverPic: profile.cover_url || coverPhoto2,\n          profilePic: profile.avatar_url || profilePhoto\n        });\n      }\n    };\n    loadProfile();\n  }, []);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editData, setEditData] = useState(userInfo);\n\n  // Handle text changes (name, about)\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditData({\n      ...editData,\n      [name]: value\n    });\n  };\n\n  // Handle file input changes separately\n\n  const handleFileChange = async e => {\n    const {\n      name,\n      files\n    } = e.target;\n    if (!files || files.length === 0) return;\n    const file = files[0];\n\n    // 1. Local preview\n    setEditData({\n      ...editData,\n      [name]: URL.createObjectURL(file)\n    });\n    try {\n      if (!user) return;\n\n      // 2. Create a unique file path for Supabase Storage\n      const fileExt = file.name.split('.').pop();\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\n\n      // 3. Upload to Supabase Storage bucket \"profile_photos\"\n      const {\n        error: uploadError\n      } = await supabase.storage.from('profile_photos').upload(filePath, file, {\n        upsert: true\n      });\n      if (uploadError) throw uploadError;\n\n      // 4. Get the public URL\n      const {\n        data\n      } = supabase.storage.from('profile_photos').getPublicUrl(filePath);\n      const publicUrl = data.publicUrl;\n\n      // 5. Save that URL in editData (so Save button will persist it)\n      setEditData(prev => ({\n        ...prev,\n        [name]: publicUrl\n      }));\n    } catch (err) {\n      console.error('Upload failed:', err.message);\n      alert('Error uploading image: ' + err.message);\n    }\n  };\n  const handleCoverFileChange = async e => {\n    const {\n      name,\n      files\n    } = e.target;\n    if (!files || files.length === 0) return;\n    const file = files[0];\n\n    // 1. Local preview\n    setEditData({\n      ...editData,\n      [name]: URL.createObjectURL(file)\n    });\n    try {\n      if (!user) return;\n\n      // 2. Create a unique file path for Supabase Storage\n      const fileExt = file.name.split('.').pop();\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\n\n      // 3. Upload to Supabase Storage bucket \"profile_photos\"\n      const {\n        error: uploadError\n      } = await supabase.storage.from('cover_photos').upload(filePath, file, {\n        upsert: true\n      });\n      if (uploadError) throw uploadError;\n\n      // 4. Get the public URL\n      const {\n        data\n      } = supabase.storage.from('cover_photos').getPublicUrl(filePath);\n      const publicUrl = data.publicUrl;\n\n      // 5. Save that URL in editData (so Save button will persist it)\n      setEditData(prev => ({\n        ...prev,\n        [name]: publicUrl\n      }));\n    } catch (err) {\n      console.error('Upload failed:', err.message);\n      alert('Error uploading image: ' + err.message);\n    }\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  //updates the profile for when the user edits\n  const updateProfile = async (userId, updates) => {\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').update(updates) // object containing fields to update\n    .eq('id', userId).select().single();\n    if (error) {\n      console.error('Error updating profile:', error.message);\n      return null;\n    }\n    return data;\n  };\n\n  // hsndles updates\n  const handleUpdate = async () => {\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\n    if (!user) return;\n    const updated = await updateProfile(user.id, {\n      full_name: editData.name,\n      bio: editData.about,\n      avatar_url: editData.profilePic,\n      cover_url: editData.coverPic\n    });\n    if (updated) {\n      console.log('Profile updated:');\n    }\n  };\n  const handleSave = e => {\n    e.preventDefault(); // stop page reload\n    setUserInfo(editData);\n    setIsEditing(false);\n    handleUpdate();\n  };\n  const [csos, setCsos] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch CSOs and follow status for current user\n  useEffect(() => {\n    const fetchCsos = async () => {\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\n      if (!user) return;\n\n      // get all CSOs\n      const {\n        data: csoData,\n        error: csoError\n      } = await supabase.from('cso').select('id, name, cluster, logo_url');\n      if (csoError) {\n        console.error('Error fetching CSOs:', csoError.message);\n        setLoading(false);\n        return;\n      }\n\n      // get which CSOs current user follows\n      const {\n        data: followData,\n        error: followError\n      } = await supabase.from('cso_follow').select('cso_id, follow_status').eq('student_number', user.id);\n      if (followError) {\n        console.error('Error fetching follow data:', followError.message);\n        setLoading(false);\n        return;\n      }\n\n      // map CSOs + follow status\n      const followMap = followData.reduce((acc, f) => {\n        acc[f.cso_id] = f.follow_status;\n        return acc;\n      }, {});\n\n      // only include CSOs not followed\n      const unfollowedCsos = csoData.map(cso => ({\n        ...cso,\n        isFollowing: followMap[cso.id] || false\n      })).filter(cso => !cso.isFollowing);\n      setCsos(unfollowedCsos);\n      setLoading(false);\n    };\n    fetchCsos();\n  }, [user]);\n\n  // Toggle follow / unfollow\n  const handleFollowToggle = async (csoId, isFollowing) => {\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\n    if (!user) return;\n    if (!user.id) return;\n    if (isFollowing) {\n      // unfollow â†’ update or delete\n      const {\n        error\n      } = await supabase.from('cso_follow').delete().eq('cso_id', csoId).eq('student_number', user.id);\n      if (error) console.error('Error unfollowing:', error.message);\n    } else {\n      // follow â†’ insert\n      const {\n        error\n      } = await supabase.from('cso_follow').insert([{\n        cso_id: csoId,\n        student_number: user.id,\n        follow_status: true\n      }]);\n      if (error) console.error('Error following:', error.message);\n    }\n\n    // refresh list\n    // refresh list â†’ remove followed CSO from view\n    setCsos(prev => prev.filter(cso => cso.id !== csoId));\n  };\n  const [visibleCount, setVisibleCount] = useState(10); // ðŸ‘ˆ show 10 at first\n\n  // ... your existing fetchCsos useEffect and handleFollowToggle code ...\n\n  // Function to show more CSOs\n  const handleShowMore = () => {\n    setVisibleCount(prev => prev + 10);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isEditing ?\n    /*#__PURE__*/\n    // --- EDIT MODE ---\n    _jsxDEV(\"section\", {\n      className: \"profile-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"inputs\",\n        onSubmit: handleSave,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"myCoverfile\",\n          children: [\"Select a Cover Photo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"myCoverfile\",\n            name: \"coverPic\",\n            onChange: handleCoverFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"myProfilefile\",\n          children: [\"Select a Profile Photo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"myProfilefile\",\n            name: \"profilePic\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ProfileName\",\n          children: [\"Enter Your Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: editData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"About\",\n          children: [\"About:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"About\",\n            name: \"about\",\n            rows: \"8\",\n            cols: \"70\",\n            placeholder: \"Tell us about yourself...\",\n            value: editData.about,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // --- VIEW MODE ---\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StudentHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"profie-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"profile-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"ProfilePhotos\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: userInfo.coverPic,\n              id: \"cover\",\n              alt: \"cover photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userInfo.profilePic,\n              id: \"profile\",\n              alt: \"profile photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: edit,\n              onClick: handleEdit,\n              id: \"editProfile\",\n              alt: \"edit profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"UserInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"Name\",\n              children: userInfo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"about\",\n              children: userInfo.about\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"interests\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Interests:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), csos.slice(0, visibleCount).map(cso => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"interest-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: cso.logo_url || 'https://dummyimage.com/40x40/000000/ffffff&text=W',\n              alt: cso.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: cso.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subtitle\",\n                children: cso.cluster\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subtitle\",\n                children: \"Number of followers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"follow-btn\",\n              onClick: () => handleFollowToggle(cso.id, cso.isFollowing),\n              children: cso.isFollowing ? 'Unfollow' : 'Follow'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this)]\n          }, cso.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)), visibleCount < csos.length && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-more\",\n            onClick: handleShowMore,\n            children: \"Show more suggestions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(StudentProfile, \"kca8mJBfHgtRmG1sLgQqeLgQvhw=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentProfile;\nvar _c;\n$RefreshReg$(_c, \"StudentProfile\");","map":{"version":3,"names":["React","useEffect","useState","StudentHeader","useNavigate","coverPhoto","profilePhoto","coverPhoto2","edit","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentProfile","_s","navigate","userInfo","setUserInfo","name","about","coverPic","profilePic","user","setUser","fetchProfile","userId","data","error","from","select","eq","single","console","loadProfile","auth","getUser","profile","id","full_name","bio","cover_url","avatar_url","setEditData","isEditing","setIsEditing","editData","handleChange","e","value","target","handleFileChange","files","length","file","URL","createObjectURL","fileExt","split","pop","filePath","Date","now","uploadError","storage","upload","upsert","getPublicUrl","publicUrl","prev","err","message","alert","handleCoverFileChange","handleEdit","updateProfile","updates","update","handleUpdate","updated","log","handleSave","preventDefault","csos","setCsos","loading","setLoading","fetchCsos","csoData","csoError","followData","followError","followMap","reduce","acc","f","cso_id","follow_status","unfollowedCsos","map","cso","isFollowing","filter","handleFollowToggle","csoId","delete","insert","student_number","visibleCount","setVisibleCount","handleShowMore","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","onChange","rows","cols","placeholder","src","alt","onClick","slice","logo_url","cluster","_c","$RefreshReg$"],"sources":["C:/Programming/Clubs Connect/Clubs-Connect/src/components/StudentProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport StudentHeader from './StudentHeader';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport coverPhoto from '../images/coverPhoto.jpeg';\r\nimport profilePhoto from '../images/ProfilePhoto.jpeg';\r\nimport coverPhoto2 from '../images/coverPhoto2.png';\r\nimport '../styles/StudentProfile.css';\r\nimport edit from '../images/icons8-edit-50.png';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nexport default function StudentProfile() {\r\n  const navigate = useNavigate();\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: 'Mmakwena',\r\n    about: '',\r\n    coverPic: coverPhoto2,\r\n    profilePic: profilePhoto,\r\n  });\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  //fetching the necessary data from supabase\r\n  //fetching profile/user data\r\n  const fetchProfile = async userId => {\r\n    const { data, error } = await supabase\r\n      .from('profiles')\r\n      .select('full_name, bio,avatar_url,cover_url')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error fetching profile:', error);\r\n      return null;\r\n    }\r\n    return data;\r\n  };\r\n\r\n  //setting what is in the database to the profile\r\n  useEffect(() => {\r\n    const loadProfile = async () => {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\r\n      if (!user) return;\r\n\r\n      setUser(user);\r\n      const profile = await fetchProfile(user.id);\r\n      if (profile) {\r\n        setUserInfo({\r\n          name: profile.full_name || 'Unnamed User',\r\n          about: profile.bio || '',\r\n          coverPic: profile.cover_url || coverPhoto2,\r\n          profilePic: profile.avatar_url || profilePhoto,\r\n        });\r\n        setEditData({\r\n          name: profile.full_name || 'Unnamed User',\r\n          about: profile.bio || '',\r\n          coverPic: profile.cover_url || coverPhoto2,\r\n          profilePic: profile.avatar_url || profilePhoto,\r\n        });\r\n      }\r\n    };\r\n    loadProfile();\r\n  }, []);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editData, setEditData] = useState(userInfo);\r\n\r\n  // Handle text changes (name, about)\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setEditData({\r\n      ...editData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Handle file input changes separately\r\n\r\n  const handleFileChange = async e => {\r\n    const { name, files } = e.target;\r\n    if (!files || files.length === 0) return;\r\n\r\n    const file = files[0];\r\n\r\n    // 1. Local preview\r\n    setEditData({\r\n      ...editData,\r\n      [name]: URL.createObjectURL(file),\r\n    });\r\n\r\n    try {\r\n      if (!user) return;\r\n\r\n      // 2. Create a unique file path for Supabase Storage\r\n      const fileExt = file.name.split('.').pop();\r\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\r\n\r\n      // 3. Upload to Supabase Storage bucket \"profile_photos\"\r\n      const { error: uploadError } = await supabase.storage\r\n        .from('profile_photos')\r\n        .upload(filePath, file, { upsert: true });\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      // 4. Get the public URL\r\n      const { data } = supabase.storage.from('profile_photos').getPublicUrl(filePath);\r\n\r\n      const publicUrl = data.publicUrl;\r\n\r\n      // 5. Save that URL in editData (so Save button will persist it)\r\n      setEditData(prev => ({\r\n        ...prev,\r\n        [name]: publicUrl,\r\n      }));\r\n    } catch (err) {\r\n      console.error('Upload failed:', err.message);\r\n      alert('Error uploading image: ' + err.message);\r\n    }\r\n  };\r\n  const handleCoverFileChange = async e => {\r\n    const { name, files } = e.target;\r\n    if (!files || files.length === 0) return;\r\n\r\n    const file = files[0];\r\n\r\n    // 1. Local preview\r\n    setEditData({\r\n      ...editData,\r\n      [name]: URL.createObjectURL(file),\r\n    });\r\n\r\n    try {\r\n      if (!user) return;\r\n\r\n      // 2. Create a unique file path for Supabase Storage\r\n      const fileExt = file.name.split('.').pop();\r\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\r\n\r\n      // 3. Upload to Supabase Storage bucket \"profile_photos\"\r\n      const { error: uploadError } = await supabase.storage\r\n        .from('cover_photos')\r\n        .upload(filePath, file, { upsert: true });\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      // 4. Get the public URL\r\n      const { data } = supabase.storage.from('cover_photos').getPublicUrl(filePath);\r\n\r\n      const publicUrl = data.publicUrl;\r\n\r\n      // 5. Save that URL in editData (so Save button will persist it)\r\n      setEditData(prev => ({\r\n        ...prev,\r\n        [name]: publicUrl,\r\n      }));\r\n    } catch (err) {\r\n      console.error('Upload failed:', err.message);\r\n      alert('Error uploading image: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  //updates the profile for when the user edits\r\n  const updateProfile = async (userId, updates) => {\r\n    const { data, error } = await supabase\r\n      .from('profiles')\r\n      .update(updates) // object containing fields to update\r\n      .eq('id', userId)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error updating profile:', error.message);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  // hsndles updates\r\n  const handleUpdate = async () => {\r\n    const {\r\n      data: { user },\r\n    } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\r\n    if (!user) return;\r\n    const updated = await updateProfile(user.id, {\r\n      full_name: editData.name,\r\n      bio: editData.about,\r\n      avatar_url: editData.profilePic,\r\n      cover_url: editData.coverPic,\r\n    });\r\n\r\n    if (updated) {\r\n      console.log('Profile updated:');\r\n    }\r\n  };\r\n\r\n  const handleSave = e => {\r\n    e.preventDefault(); // stop page reload\r\n    setUserInfo(editData);\r\n    setIsEditing(false);\r\n    handleUpdate();\r\n  };\r\n\r\n  const [csos, setCsos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch CSOs and follow status for current user\r\n  useEffect(() => {\r\n    const fetchCsos = async () => {\r\n      setLoading(true);\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\r\n      if (!user) return;\r\n\r\n      // get all CSOs\r\n      const { data: csoData, error: csoError } = await supabase\r\n        .from('cso')\r\n        .select('id, name, cluster, logo_url');\r\n\r\n      if (csoError) {\r\n        console.error('Error fetching CSOs:', csoError.message);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // get which CSOs current user follows\r\n      const { data: followData, error: followError } = await supabase\r\n        .from('cso_follow')\r\n        .select('cso_id, follow_status')\r\n        .eq('student_number', user.id);\r\n\r\n      if (followError) {\r\n        console.error('Error fetching follow data:', followError.message);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // map CSOs + follow status\r\n      const followMap = followData.reduce((acc, f) => {\r\n        acc[f.cso_id] = f.follow_status;\r\n        return acc;\r\n      }, {});\r\n\r\n      // only include CSOs not followed\r\n      const unfollowedCsos = csoData\r\n        .map(cso => ({\r\n          ...cso,\r\n          isFollowing: followMap[cso.id] || false,\r\n        }))\r\n        .filter(cso => !cso.isFollowing);\r\n\r\n      setCsos(unfollowedCsos);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchCsos();\r\n  }, [user]);\r\n\r\n  // Toggle follow / unfollow\r\n  const handleFollowToggle = async (csoId, isFollowing) => {\r\n    const {\r\n      data: { user },\r\n    } = await supabase.auth.getUser(); // ðŸ‘ˆ get logged-in user\r\n    if (!user) return;\r\n    if (!user.id) return;\r\n\r\n    if (isFollowing) {\r\n      // unfollow â†’ update or delete\r\n      const { error } = await supabase\r\n        .from('cso_follow')\r\n        .delete()\r\n        .eq('cso_id', csoId)\r\n        .eq('student_number', user.id);\r\n\r\n      if (error) console.error('Error unfollowing:', error.message);\r\n    } else {\r\n      // follow â†’ insert\r\n      const { error } = await supabase.from('cso_follow').insert([\r\n        {\r\n          cso_id: csoId,\r\n          student_number: user.id,\r\n          follow_status: true,\r\n        },\r\n      ]);\r\n\r\n      if (error) console.error('Error following:', error.message);\r\n    }\r\n\r\n    // refresh list\r\n    // refresh list â†’ remove followed CSO from view\r\n    setCsos(prev => prev.filter(cso => cso.id !== csoId));\r\n  };\r\n\r\n  const [visibleCount, setVisibleCount] = useState(10); // ðŸ‘ˆ show 10 at first\r\n\r\n  // ... your existing fetchCsos useEffect and handleFollowToggle code ...\r\n\r\n  // Function to show more CSOs\r\n  const handleShowMore = () => {\r\n    setVisibleCount(prev => prev + 10);\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <>\r\n      {isEditing ? (\r\n        // --- EDIT MODE ---\r\n        <section className=\"profile-form\">\r\n          <form className=\"inputs\" onSubmit={handleSave}>\r\n            <label htmlFor=\"myCoverfile\">\r\n              Select a Cover Photo:\r\n              <input\r\n                type=\"file\"\r\n                id=\"myCoverfile\"\r\n                name=\"coverPic\"\r\n                onChange={handleCoverFileChange}\r\n              />\r\n            </label>\r\n            <br />\r\n\r\n            <label htmlFor=\"myProfilefile\">\r\n              Select a Profile Photo:\r\n              <input type=\"file\" id=\"myProfilefile\" name=\"profilePic\" onChange={handleFileChange} />\r\n            </label>\r\n            <br />\r\n\r\n            <label htmlFor=\"ProfileName\">\r\n              Enter Your Name:\r\n              <input type=\"text\" name=\"name\" value={editData.name} onChange={handleChange} />\r\n            </label>\r\n            <br />\r\n\r\n            <label htmlFor=\"About\">\r\n              About:\r\n              <textarea\r\n                id=\"About\"\r\n                name=\"about\"\r\n                rows=\"8\"\r\n                cols=\"70\"\r\n                placeholder=\"Tell us about yourself...\"\r\n                value={editData.about}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n            <br />\r\n\r\n            <button type=\"submit\">Save</button>\r\n          </form>\r\n        </section>\r\n      ) : (\r\n        // --- VIEW MODE ---\r\n        <>\r\n          <StudentHeader />\r\n          <section className=\"profie-page\">\r\n            <section className=\"profile-content\">\r\n              <section className=\"ProfilePhotos\">\r\n                <img src={userInfo.coverPic} id=\"cover\" alt=\"cover photo\" />\r\n                <img src={userInfo.profilePic} id=\"profile\" alt=\"profile photo\" />\r\n                <img src={edit} onClick={handleEdit} id=\"editProfile\" alt=\"edit profile\" />\r\n              </section>\r\n\r\n              <section className=\"UserInfo\">\r\n                <h2 className=\"Name\">{userInfo.name}</h2>\r\n                <p className=\"about\">{userInfo.about}</p>\r\n              </section>\r\n            </section>\r\n            <aside className=\"interests\">\r\n              {/* //<div className=\"card\"> */}\r\n              <h3>Interests:</h3>\r\n              {csos.slice(0, visibleCount).map(cso => (\r\n                <div className=\"interest-item\" key={cso.id}>\r\n                  <img\r\n                    src={cso.logo_url || 'https://dummyimage.com/40x40/000000/ffffff&text=W'}\r\n                    alt={cso.name}\r\n                  />\r\n                  <div>\r\n                    <p className=\"title\">{cso.name}</p>\r\n                    <p className=\"subtitle\">{cso.cluster}</p>\r\n                    <p className=\"subtitle\">Number of followers</p>\r\n                  </div>\r\n                  <button\r\n                    className=\"follow-btn\"\r\n                    onClick={() => handleFollowToggle(cso.id, cso.isFollowing)}\r\n                  >\r\n                    {cso.isFollowing ? 'Unfollow' : 'Follow'}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n\r\n              {/* <div className=\"interest-item\">\r\n                <img src=\"https://dummyimage.com/40x40/000000/ffffff&text=W\" alt=\"Entity name\"/>\r\n                <div>\r\n                <p className=\"title\">Wits DevSoc</p>\r\n                <p className=\"subtitle\">Category</p>\r\n                <p className=\"subtitle\">Number of followers</p>\r\n                </div>\r\n                    <button className=\"follow-btn\">Follow</button>\r\n            </div> \r\n            <button className=\"show-more\">Show more suggestions</button>\r\n            {/* </div> */}\r\n\r\n              {visibleCount < csos.length && (\r\n                <button className=\"show-more\" onClick={handleShowMore}>\r\n                  Show more suggestions\r\n                </button>\r\n              )}\r\n            </aside>\r\n          </section>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}