{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs Connect\\\\Clubs-Connect\\\\src\\\\components\\\\addCSO.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddCSO() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    cluster: '',\n    subscription: '',\n    executives: []\n  });\n  const [logoFile, setLogoFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [executives, setExecutives] = useState([]);\n\n  // Executive search states\n  const [executiveSearch, setExecutiveSearch] = useState('');\n  const [showExecutiveSuggestions, setShowExecutiveSuggestions] = useState(false);\n  const [selectedExecutives, setSelectedExecutives] = useState([]);\n\n  // Fetch executives from the database\n  useEffect(() => {\n    fetchExecutives();\n  }, []);\n  const fetchExecutives = async () => {\n    try {\n      const {\n        data: execData,\n        error: execError\n      } = await supabase.from('executive').select('id, \"student/staff_number\"');\n      if (execError) throw execError;\n      if (execData && execData.length > 0) {\n        const studentNumbers = execData.map(exec => exec['student/staff_number']).filter(Boolean);\n        if (studentNumbers.length > 0) {\n          const {\n            data: profileData,\n            error: profileError\n          } = await supabase.from('profiles').select('id, full_name').in('id', studentNumbers);\n          if (profileError) throw profileError;\n          const executivesWithNames = execData.map(exec => {\n            const profile = profileData === null || profileData === void 0 ? void 0 : profileData.find(p => p.id === exec['student/staff_number']);\n            return {\n              id: exec.id,\n              student_staff_number: exec['student/staff_number'],\n              name: (profile === null || profile === void 0 ? void 0 : profile.full_name) || 'Unknown Executive'\n            };\n          });\n          setExecutives(executivesWithNames);\n        }\n      }\n    } catch (err) {\n      console.error('Error fetching executives:', err);\n      setError('Failed to load executives');\n    }\n  };\n\n  // Filter executives based on search\n  const filteredExecutives = executives.filter(exec => exec.name.toLowerCase().includes(executiveSearch.toLowerCase()) && !selectedExecutives.find(selected => selected.id === exec.id));\n  const handleAddExecutive = executive => {\n    setSelectedExecutives([...selectedExecutives, executive]);\n    setFormData({\n      ...formData,\n      executives: [...formData.executives, executive.id]\n    });\n    setExecutiveSearch('');\n    setShowExecutiveSuggestions(false);\n  };\n  const handleRemoveExecutive = executiveId => {\n    setSelectedExecutives(selectedExecutives.filter(exec => exec.id !== executiveId));\n    setFormData({\n      ...formData,\n      executives: formData.executives.filter(id => id !== executiveId)\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.type.startsWith('image/')) {\n        setError('Please select an image file');\n        return;\n      }\n      if (file.size > 5 * 1024 * 1024) {\n        setError('File size must be less than 5MB');\n        return;\n      }\n      setLogoFile(file);\n      setError(null);\n    }\n  };\n  const uploadLogo = async file => {\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${Math.random()}.${fileExt}`;\n    const filePath = `cso-logos/${fileName}`;\n    const {\n      data,\n      error\n    } = await supabase.storage.from('logos').upload(filePath, file);\n    if (error) {\n      throw error;\n    }\n    const {\n      data: {\n        publicUrl\n      }\n    } = supabase.storage.from('logos').getPublicUrl(filePath);\n    return publicUrl;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    try {\n      if (!formData.name) {\n        throw new Error('CSO name is required');\n      }\n      if (!formData.cluster) {\n        throw new Error('Cluster selection is required');\n      }\n      let logo_url = null;\n      if (logoFile) {\n        logo_url = await uploadLogo(logoFile);\n      }\n      const {\n        data: csoData,\n        error: csoError\n      } = await supabase.from('cso').insert([{\n        name: formData.name,\n        description: formData.description,\n        cluster: formData.cluster,\n        subscription: formData.subscription,\n        logo_url: logo_url\n      }]).select().single();\n      if (csoError) throw csoError;\n      if (formData.executives.length > 0) {\n        const executivesToLink = formData.executives.map(execId => ({\n          cso_id: csoData.id,\n          exec_id: execId,\n          portfolio: 'Member',\n          can_post: true,\n          start_date: new Date().toISOString().split('T')[0]\n        }));\n        const {\n          error: linkError\n        } = await supabase.from('cso_exec').insert(executivesToLink);\n        if (linkError) throw linkError;\n      }\n      setSuccess(true);\n      setFormData({\n        name: '',\n        description: '',\n        cluster: '',\n        subscription: '',\n        executives: []\n      });\n      setSelectedExecutives([]);\n      setLogoFile(null);\n      const fileInput = document.getElementById('logo-input');\n      if (fileInput) fileInput.value = '';\n      setTimeout(() => {\n        navigate('/CSO');\n      }, 2000);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const cancel = () => {\n    navigate('/CSO');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex flex-col gap-3 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a club, society, or organization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: \"CSO created successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Logo\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"logo-input\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"CSO Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Cluster\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"cluster\",\n        value: formData.cluster,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a cluster...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"political\",\n          children: \"Political Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"academic\",\n          children: \"Academic Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"social\",\n          children: \"Social Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cultural\",\n          children: \"Cultural Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"religious\",\n          children: \"Religious Cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sport\",\n          children: \"WITS Sport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"council\",\n          children: \"School Council\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Subscription Required\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"subscription\",\n            value: \"no\",\n            checked: formData.subscription === 'no',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"subscription\",\n            value: \"yes\",\n            checked: formData.subscription === 'yes',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), \"Yes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Executive(s)\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type to search executives...\",\n          value: executiveSearch,\n          onChange: e => {\n            setExecutiveSearch(e.target.value);\n            setShowExecutiveSuggestions(true);\n          },\n          onFocus: () => setShowExecutiveSuggestions(true),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), showExecutiveSuggestions && executiveSearch && filteredExecutives.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '100%',\n            left: 0,\n            right: 0,\n            backgroundColor: 'white',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            maxHeight: '200px',\n            overflowY: 'auto',\n            zIndex: 1000,\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          },\n          children: filteredExecutives.map(exec => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleAddExecutive(exec),\n            style: {\n              padding: '8px 12px',\n              cursor: 'pointer',\n              borderBottom: '1px solid #eee',\n              ':hover': {\n                backgroundColor: '#f5f5f5'\n              }\n            },\n            onMouseEnter: e => e.target.style.backgroundColor = '#f5f5f5',\n            onMouseLeave: e => e.target.style.backgroundColor = 'white',\n            children: exec.name\n          }, exec.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this), showExecutiveSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 999\n          },\n          onClick: () => setShowExecutiveSuggestions(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: selectedExecutives.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Selected executives:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '8px',\n              marginTop: '5px'\n            },\n            children: selectedExecutives.map(exec => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#e0e0e0',\n                padding: '4px 8px',\n                borderRadius: '4px',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: exec.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveExecutive(exec.id),\n                style: {\n                  backgroundColor: 'transparent',\n                  border: 'none',\n                  cursor: 'pointer',\n                  padding: '0 4px',\n                  fontSize: '16px',\n                  color: '#666'\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this)]\n            }, exec.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Creating CSO...' : 'Add CSO'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(AddCSO, \"MrmfqpTIH3FvIAfhiyOhbKLEa4w=\", false, function () {\n  return [useNavigate];\n});\n_c = AddCSO;\nexport default AddCSO;\nvar _c;\n$RefreshReg$(_c, \"AddCSO\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","jsxDEV","_jsxDEV","AddCSO","_s","navigate","formData","setFormData","name","description","cluster","subscription","executives","logoFile","setLogoFile","loading","setLoading","error","setError","success","setSuccess","setExecutives","executiveSearch","setExecutiveSearch","showExecutiveSuggestions","setShowExecutiveSuggestions","selectedExecutives","setSelectedExecutives","fetchExecutives","data","execData","execError","from","select","length","studentNumbers","map","exec","filter","Boolean","profileData","profileError","in","executivesWithNames","profile","find","p","id","student_staff_number","full_name","err","console","filteredExecutives","toLowerCase","includes","selected","handleAddExecutive","executive","handleRemoveExecutive","executiveId","handleChange","e","value","target","handleFileChange","file","files","type","startsWith","size","uploadLogo","fileExt","split","pop","fileName","Math","random","filePath","storage","upload","publicUrl","getPublicUrl","handleSubmit","preventDefault","Error","logo_url","csoData","csoError","insert","single","executivesToLink","execId","cso_id","exec_id","portfolio","can_post","start_date","Date","toISOString","linkError","fileInput","document","getElementById","setTimeout","message","cancel","onSubmit","className","children","_jsxFileName","lineNumber","columnNumber","style","color","accept","onChange","required","rows","checked","marginLeft","position","placeholder","onFocus","width","top","left","right","backgroundColor","border","borderRadius","maxHeight","overflowY","zIndex","boxShadow","onClick","padding","cursor","borderBottom","onMouseEnter","onMouseLeave","bottom","marginTop","display","flexWrap","gap","alignItems","fontSize","disabled","_c","$RefreshReg$"],"sources":["C:/Programming/Clubs Connect/Clubs-Connect/src/components/addCSO.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nfunction AddCSO() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    cluster: '',\r\n    subscription: '',\r\n    executives: [],\r\n  });\r\n  const [logoFile, setLogoFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [executives, setExecutives] = useState([]);\r\n\r\n  // Executive search states\r\n  const [executiveSearch, setExecutiveSearch] = useState('');\r\n  const [showExecutiveSuggestions, setShowExecutiveSuggestions] =\r\n    useState(false);\r\n  const [selectedExecutives, setSelectedExecutives] = useState([]);\r\n\r\n  // Fetch executives from the database\r\n  useEffect(() => {\r\n    fetchExecutives();\r\n  }, []);\r\n\r\n  const fetchExecutives = async () => {\r\n    try {\r\n      const { data: execData, error: execError } = await supabase\r\n        .from('executive')\r\n        .select('id, \"student/staff_number\"');\r\n\r\n      if (execError) throw execError;\r\n\r\n      if (execData && execData.length > 0) {\r\n        const studentNumbers = execData\r\n          .map((exec) => exec['student/staff_number'])\r\n          .filter(Boolean);\r\n\r\n        if (studentNumbers.length > 0) {\r\n          const { data: profileData, error: profileError } = await supabase\r\n            .from('profiles')\r\n            .select('id, full_name')\r\n            .in('id', studentNumbers);\r\n\r\n          if (profileError) throw profileError;\r\n\r\n          const executivesWithNames = execData.map((exec) => {\r\n            const profile = profileData?.find(\r\n              (p) => p.id === exec['student/staff_number']\r\n            );\r\n            return {\r\n              id: exec.id,\r\n              student_staff_number: exec['student/staff_number'],\r\n              name: profile?.full_name || 'Unknown Executive',\r\n            };\r\n          });\r\n\r\n          setExecutives(executivesWithNames);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching executives:', err);\r\n      setError('Failed to load executives');\r\n    }\r\n  };\r\n\r\n  // Filter executives based on search\r\n  const filteredExecutives = executives.filter(\r\n    (exec) =>\r\n      exec.name.toLowerCase().includes(executiveSearch.toLowerCase()) &&\r\n      !selectedExecutives.find((selected) => selected.id === exec.id)\r\n  );\r\n\r\n  const handleAddExecutive = (executive) => {\r\n    setSelectedExecutives([...selectedExecutives, executive]);\r\n    setFormData({\r\n      ...formData,\r\n      executives: [...formData.executives, executive.id],\r\n    });\r\n    setExecutiveSearch('');\r\n    setShowExecutiveSuggestions(false);\r\n  };\r\n\r\n  const handleRemoveExecutive = (executiveId) => {\r\n    setSelectedExecutives(\r\n      selectedExecutives.filter((exec) => exec.id !== executiveId)\r\n    );\r\n    setFormData({\r\n      ...formData,\r\n      executives: formData.executives.filter((id) => id !== executiveId),\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      if (!file.type.startsWith('image/')) {\r\n        setError('Please select an image file');\r\n        return;\r\n      }\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        setError('File size must be less than 5MB');\r\n        return;\r\n      }\r\n      setLogoFile(file);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const uploadLogo = async (file) => {\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${Math.random()}.${fileExt}`;\r\n    const filePath = `cso-logos/${fileName}`;\r\n\r\n    const { data, error } = await supabase.storage\r\n      .from('logos')\r\n      .upload(filePath, file);\r\n\r\n    if (error) {\r\n      throw error;\r\n    }\r\n\r\n    const {\r\n      data: { publicUrl },\r\n    } = supabase.storage.from('logos').getPublicUrl(filePath);\r\n\r\n    return publicUrl;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    try {\r\n      if (!formData.name) {\r\n        throw new Error('CSO name is required');\r\n      }\r\n      if (!formData.cluster) {\r\n        throw new Error('Cluster selection is required');\r\n      }\r\n\r\n      let logo_url = null;\r\n\r\n      if (logoFile) {\r\n        logo_url = await uploadLogo(logoFile);\r\n      }\r\n\r\n      const { data: csoData, error: csoError } = await supabase\r\n        .from('cso')\r\n        .insert([\r\n          {\r\n            name: formData.name,\r\n            description: formData.description,\r\n            cluster: formData.cluster,\r\n            subscription: formData.subscription,\r\n            logo_url: logo_url,\r\n          },\r\n        ])\r\n        .select()\r\n        .single();\r\n\r\n      if (csoError) throw csoError;\r\n\r\n      if (formData.executives.length > 0) {\r\n        const executivesToLink = formData.executives.map((execId) => ({\r\n          cso_id: csoData.id,\r\n          exec_id: execId,\r\n          portfolio: 'Member',\r\n          can_post: true,\r\n          start_date: new Date().toISOString().split('T')[0],\r\n        }));\r\n\r\n        const { error: linkError } = await supabase\r\n          .from('cso_exec')\r\n          .insert(executivesToLink);\r\n\r\n        if (linkError) throw linkError;\r\n      }\r\n\r\n      setSuccess(true);\r\n      setFormData({\r\n        name: '',\r\n        description: '',\r\n        cluster: '',\r\n        subscription: '',\r\n        executives: [],\r\n      });\r\n      setSelectedExecutives([]);\r\n      setLogoFile(null);\r\n\r\n      const fileInput = document.getElementById('logo-input');\r\n      if (fileInput) fileInput.value = '';\r\n\r\n      setTimeout(() => {\r\n        navigate('/CSO');\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const cancel = () => {\r\n    navigate('/CSO');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 p-4\">\r\n      <h1>Add a club, society, or organization</h1>\r\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n      {success && <p style={{ color: 'green' }}>CSO created successfully!</p>}\r\n\r\n      <label>\r\n        Logo\r\n        <input\r\n          id=\"logo-input\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileChange}\r\n        />\r\n      </label>\r\n      <br />\r\n\r\n      <label>\r\n        CSO Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n\r\n      <label>\r\n        Description\r\n        <textarea\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          rows=\"3\"\r\n        />\r\n      </label>\r\n      <br />\r\n\r\n      <label>\r\n        Cluster\r\n        <select\r\n          name=\"cluster\"\r\n          value={formData.cluster}\r\n          onChange={handleChange}\r\n          required\r\n        >\r\n          <option value=\"\">Select a cluster...</option>\r\n          <option value=\"political\">Political Cluster</option>\r\n          <option value=\"academic\">Academic Cluster</option>\r\n          <option value=\"social\">Social Cluster</option>\r\n          <option value=\"cultural\">Cultural Cluster</option>\r\n          <option value=\"religious\">Religious Cluster</option>\r\n          <option value=\"sport\">WITS Sport</option>\r\n          <option value=\"council\">School Council</option>\r\n        </select>\r\n      </label>\r\n      <br />\r\n\r\n      <label>\r\n        Subscription Required\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"subscription\"\r\n              value=\"no\"\r\n              checked={formData.subscription === 'no'}\r\n              onChange={handleChange}\r\n            />\r\n            No\r\n          </label>\r\n          <label style={{ marginLeft: '1rem' }}>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"subscription\"\r\n              value=\"yes\"\r\n              checked={formData.subscription === 'yes'}\r\n              onChange={handleChange}\r\n            />\r\n            Yes\r\n          </label>\r\n        </div>\r\n      </label>\r\n      <br />\r\n\r\n      <label>\r\n        Executive(s)\r\n        <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type to search executives...\"\r\n            value={executiveSearch}\r\n            onChange={(e) => {\r\n              setExecutiveSearch(e.target.value);\r\n              setShowExecutiveSuggestions(true);\r\n            }}\r\n            onFocus={() => setShowExecutiveSuggestions(true)}\r\n            style={{ width: '100%' }}\r\n          />\r\n\r\n          {/* Suggestions dropdown */}\r\n          {showExecutiveSuggestions &&\r\n            executiveSearch &&\r\n            filteredExecutives.length > 0 && (\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '100%',\r\n                  left: 0,\r\n                  right: 0,\r\n                  backgroundColor: 'white',\r\n                  border: '1px solid #ccc',\r\n                  borderRadius: '4px',\r\n                  maxHeight: '200px',\r\n                  overflowY: 'auto',\r\n                  zIndex: 1000,\r\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n                }}\r\n              >\r\n                {filteredExecutives.map((exec) => (\r\n                  <div\r\n                    key={exec.id}\r\n                    onClick={() => handleAddExecutive(exec)}\r\n                    style={{\r\n                      padding: '8px 12px',\r\n                      cursor: 'pointer',\r\n                      borderBottom: '1px solid #eee',\r\n                      ':hover': {\r\n                        backgroundColor: '#f5f5f5',\r\n                      },\r\n                    }}\r\n                    onMouseEnter={(e) =>\r\n                      (e.target.style.backgroundColor = '#f5f5f5')\r\n                    }\r\n                    onMouseLeave={(e) =>\r\n                      (e.target.style.backgroundColor = 'white')\r\n                    }\r\n                  >\r\n                    {exec.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n          {/* Click outside to close */}\r\n          {showExecutiveSuggestions && (\r\n            <div\r\n              style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                zIndex: 999,\r\n              }}\r\n              onClick={() => setShowExecutiveSuggestions(false)}\r\n            />\r\n          )}\r\n        </div>\r\n        {/* Selected executives */}\r\n        <div style={{ marginTop: '10px' }}>\r\n          {selectedExecutives.length > 0 && (\r\n            <div>\r\n              <small>Selected executives:</small>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                  gap: '8px',\r\n                  marginTop: '5px',\r\n                }}\r\n              >\r\n                {selectedExecutives.map((exec) => (\r\n                  <div\r\n                    key={exec.id}\r\n                    style={{\r\n                      backgroundColor: '#e0e0e0',\r\n                      padding: '4px 8px',\r\n                      borderRadius: '4px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '5px',\r\n                    }}\r\n                  >\r\n                    <span>{exec.name}</span>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemoveExecutive(exec.id)}\r\n                      style={{\r\n                        backgroundColor: 'transparent',\r\n                        border: 'none',\r\n                        cursor: 'pointer',\r\n                        padding: '0 4px',\r\n                        fontSize: '16px',\r\n                        color: '#666',\r\n                      }}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </label>\r\n      <br />\r\n\r\n      <div style={{ display: 'flex', gap: '1rem' }}>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Creating CSO...' : 'Add CSO'}\r\n        </button>\r\n        <button type=\"button\" onClick={cancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddCSO;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}