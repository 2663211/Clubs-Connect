{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs Connect\\\\Clubs-Connect\\\\src\\\\components\\\\addCSO.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport '../styles/addCSO.css';\n\n// Simplified Executive Search Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExecutiveSearch({\n  executives,\n  selectedExecutives,\n  onAdd,\n  onRemove\n}) {\n  _s();\n  const [search, setSearch] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  // Filter out already selected executives\n  const availableExecutives = executives.filter(exec => {\n    const matchesSearch = exec.name.toLowerCase().includes(search.toLowerCase());\n    const notSelected = !selectedExecutives.find(selected => selected.id === exec.id);\n    return matchesSearch && notSelected;\n  });\n  const selectExecutive = executive => {\n    onAdd(executive);\n    setSearch('');\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Type to search executives...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      onFocus: () => setShowSuggestions(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), showSuggestions && search && availableExecutives.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions-dropdown\",\n      children: availableExecutives.map(exec => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => selectExecutive(exec),\n        children: exec.name\n      }, exec.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), selectedExecutives.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selected executives:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"executive-chips\",\n        children: selectedExecutives.map(exec => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chip\",\n          children: [exec.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRemove(exec.id),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, exec.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Add CSO Component\n_s(ExecutiveSearch, \"ycGAYQiDumUDs1OaF+pcyS8g/8o=\");\n_c = ExecutiveSearch;\nfunction AddCSO() {\n  _s2();\n  const navigate = useNavigate();\n\n  // Initial form state\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    cluster: '',\n    subscription: '',\n    executives: []\n  });\n  const [logoFile, setLogoFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [executives, setExecutives] = useState([]);\n  const [selectedExecutives, setSelectedExecutives] = useState([]);\n\n  // Load executives on component mount\n  useEffect(() => {\n    loadExecutives();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Simplified function to load executives\n  async function loadExecutives() {\n    try {\n      // Get executive records\n      const {\n        data: execData\n      } = await supabase.from('executive').select('id, \"student/staff_number\"');\n      if (!execData || execData.length === 0) return;\n\n      // Get profile names\n      const studentNumbers = execData.map(e => e['student/staff_number']).filter(Boolean);\n      const {\n        data: profiles\n      } = await supabase.from('profiles').select('id, full_name').in('id', studentNumbers);\n\n      // Combine data\n      const executivesWithNames = execData.map(exec => {\n        var _profiles$find;\n        return {\n          id: exec.id,\n          student_staff_number: exec['student/staff_number'],\n          name: (profiles === null || profiles === void 0 ? void 0 : (_profiles$find = profiles.find(p => p.id === exec['student/staff_number'])) === null || _profiles$find === void 0 ? void 0 : _profiles$find.full_name) || 'Unknown'\n        };\n      });\n      setExecutives(executivesWithNames);\n    } catch (error) {\n      showMessage('Failed to load executives', 'error');\n    }\n  }\n\n  // Helper function to show messages\n  function showMessage(text, type = 'info') {\n    setMessage(text);\n    setMessageType(type);\n  }\n\n  // Handle form field changes\n  function updateField(fieldName, value) {\n    setFormData(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n  }\n\n  // Handle executive selection\n  function addExecutive(executive) {\n    setSelectedExecutives([...selectedExecutives, executive]);\n    setFormData(prev => ({\n      ...prev,\n      executives: [...prev.executives, executive.id]\n    }));\n  }\n\n  // Handle executive removal\n  function removeExecutive(executiveId) {\n    setSelectedExecutives(prev => prev.filter(e => e.id !== executiveId));\n    setFormData(prev => ({\n      ...prev,\n      executives: prev.executives.filter(id => id !== executiveId)\n    }));\n  }\n\n  // Handle logo file selection\n  function selectLogoFile(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // Validate file\n    if (!file.type.startsWith('image/')) {\n      showMessage('Please select an image file', 'error');\n      return;\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      showMessage('File size must be less than 5MB', 'error');\n      return;\n    }\n    setLogoFile(file);\n    showMessage('');\n  }\n\n  // Upload logo to storage\n  async function uploadLogo(file) {\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${Date.now()}-${Math.random()}.${fileExt}`;\n    const {\n      error\n    } = await supabase.storage.from('cso-logos').upload(fileName, file);\n    if (error) throw error;\n    const {\n      data: {\n        publicUrl\n      }\n    } = supabase.storage.from('cso-logos').getPublicUrl(fileName);\n    return publicUrl;\n  }\n\n  // Handle form submission\n  async function createCSO(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      // Validate required fields\n      if (!formData.name || !formData.cluster) {\n        throw new Error('Name and cluster are required');\n      }\n\n      // Upload logo if selected\n      let logo_url = null;\n      if (logoFile) {\n        logo_url = await uploadLogo(logoFile);\n      }\n\n      // Create CSO record\n      const {\n        data: cso,\n        error\n      } = await supabase.from('cso').insert([{\n        name: formData.name,\n        description: formData.description,\n        cluster: formData.cluster,\n        subscription: formData.subscription,\n        logo_url\n      }]).select().single();\n      if (error) throw error;\n\n      // Link executives if any selected\n      if (formData.executives.length > 0) {\n        const links = formData.executives.map(execId => ({\n          cso_id: cso.id,\n          exec_id: execId,\n          portfolio: 'Member',\n          can_post: true,\n          start_date: new Date().toISOString().split('T')[0]\n        }));\n        const {\n          error: linkError\n        } = await supabase.from('cso_exec').insert(links);\n        if (linkError) throw linkError;\n      }\n\n      // Success - redirect\n      showMessage('CSO created successfully!', 'success');\n      setTimeout(() => navigate('/CSO'), 2000);\n    } catch (error) {\n      showMessage(error.message || 'Failed to create CSO', 'error');\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"add-cso-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a club, society, or organization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `status-message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createCSO,\n      className: \"cso-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Logo\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: selectLogoFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Upload an image file (max 5MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"CSO Name *\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.name,\n          onChange: e => updateField('name', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.description,\n          onChange: e => updateField('description', e.target.value),\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cluster *\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: formData.cluster,\n          onChange: e => updateField('cluster', e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a cluster...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"political\",\n            children: \"Political Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"academic\",\n            children: \"Academic Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"social\",\n            children: \"Social Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cultural\",\n            children: \"Cultural Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"religious\",\n            children: \"Religious Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sport\",\n            children: \"WITS Sport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"council\",\n            children: \"School Council\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"subscription\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Subscription Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"no\",\n            checked: formData.subscription === 'no',\n            onChange: e => updateField('subscription', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"yes\",\n            checked: formData.subscription === 'yes',\n            onChange: e => updateField('subscription', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), \"Yes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Executive(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExecutiveSearch, {\n          executives: executives,\n          selectedExecutives: selectedExecutives,\n          onAdd: addExecutive,\n          onRemove: removeExecutive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"btn btn-primary\",\n          children: loading ? 'Creating CSO...' : 'Add CSO'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => navigate('/CSO'),\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s2(AddCSO, \"3v/P8unqsea8uCvzFnDmbR+DzIQ=\", false, function () {\n  return [useNavigate];\n});\n_c2 = AddCSO;\nexport default AddCSO;\nvar _c, _c2;\n$RefreshReg$(_c, \"ExecutiveSearch\");\n$RefreshReg$(_c2, \"AddCSO\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","jsxDEV","_jsxDEV","ExecutiveSearch","executives","selectedExecutives","onAdd","onRemove","_s","search","setSearch","showSuggestions","setShowSuggestions","availableExecutives","filter","exec","matchesSearch","name","toLowerCase","includes","notSelected","find","selected","id","selectExecutive","executive","children","type","placeholder","value","onChange","e","target","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","onClick","_c","AddCSO","_s2","navigate","formData","setFormData","description","cluster","subscription","logoFile","setLogoFile","loading","setLoading","message","setMessage","messageType","setMessageType","setExecutives","setSelectedExecutives","loadExecutives","data","execData","from","select","studentNumbers","Boolean","profiles","in","executivesWithNames","_profiles$find","student_staff_number","p","full_name","error","showMessage","text","updateField","fieldName","prev","addExecutive","removeExecutive","executiveId","selectLogoFile","event","file","files","startsWith","size","uploadLogo","fileExt","split","pop","Date","now","Math","random","storage","upload","publicUrl","getPublicUrl","createCSO","preventDefault","Error","logo_url","cso","insert","single","links","execId","cso_id","exec_id","portfolio","can_post","start_date","toISOString","linkError","setTimeout","onSubmit","accept","required","rows","checked","disabled","_c2","$RefreshReg$"],"sources":["C:/Programming/Clubs Connect/Clubs-Connect/src/components/addCSO.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\nimport '../styles/addCSO.css';\r\n\r\n// Simplified Executive Search Component\r\nfunction ExecutiveSearch({ executives, selectedExecutives, onAdd, onRemove }) {\r\n  const [search, setSearch] = useState('');\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n  // Filter out already selected executives\r\n  const availableExecutives = executives.filter(exec => {\r\n    const matchesSearch = exec.name.toLowerCase().includes(search.toLowerCase());\r\n    const notSelected = !selectedExecutives.find(selected => selected.id === exec.id);\r\n    return matchesSearch && notSelected;\r\n  });\r\n\r\n  const selectExecutive = executive => {\r\n    onAdd(executive);\r\n    setSearch('');\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Type to search executives...\"\r\n        value={search}\r\n        onChange={e => setSearch(e.target.value)}\r\n        onFocus={() => setShowSuggestions(true)}\r\n      />\r\n\r\n      {/* Show suggestions dropdown */}\r\n      {showSuggestions && search && availableExecutives.length > 0 && (\r\n        <ul className=\"suggestions-dropdown\">\r\n          {availableExecutives.map(exec => (\r\n            <li key={exec.id} onClick={() => selectExecutive(exec)}>\r\n              {exec.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {/* Show selected executives */}\r\n      {selectedExecutives.length > 0 && (\r\n        <section>\r\n          <strong>Selected executives:</strong>\r\n          <ul className=\"executive-chips\">\r\n            {selectedExecutives.map(exec => (\r\n              <li key={exec.id} className=\"chip\">\r\n                {exec.name}\r\n                <button onClick={() => onRemove(exec.id)}>×</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </section>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\n// Main Add CSO Component\r\nfunction AddCSO() {\r\n  const navigate = useNavigate();\r\n\r\n  // Initial form state\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    cluster: '',\r\n    subscription: '',\r\n    executives: [],\r\n  });\r\n\r\n  const [logoFile, setLogoFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [executives, setExecutives] = useState([]);\r\n  const [selectedExecutives, setSelectedExecutives] = useState([]);\r\n\r\n  // Load executives on component mount\r\n  useEffect(() => {\r\n    loadExecutives();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Simplified function to load executives\r\n  async function loadExecutives() {\r\n    try {\r\n      // Get executive records\r\n      const { data: execData } = await supabase\r\n        .from('executive')\r\n        .select('id, \"student/staff_number\"');\r\n\r\n      if (!execData || execData.length === 0) return;\r\n\r\n      // Get profile names\r\n      const studentNumbers = execData.map(e => e['student/staff_number']).filter(Boolean);\r\n\r\n      const { data: profiles } = await supabase\r\n        .from('profiles')\r\n        .select('id, full_name')\r\n        .in('id', studentNumbers);\r\n\r\n      // Combine data\r\n      const executivesWithNames = execData.map(exec => ({\r\n        id: exec.id,\r\n        student_staff_number: exec['student/staff_number'],\r\n        name: profiles?.find(p => p.id === exec['student/staff_number'])?.full_name || 'Unknown',\r\n      }));\r\n\r\n      setExecutives(executivesWithNames);\r\n    } catch (error) {\r\n      showMessage('Failed to load executives', 'error');\r\n    }\r\n  }\r\n\r\n  // Helper function to show messages\r\n  function showMessage(text, type = 'info') {\r\n    setMessage(text);\r\n    setMessageType(type);\r\n  }\r\n\r\n  // Handle form field changes\r\n  function updateField(fieldName, value) {\r\n    setFormData(prev => ({ ...prev, [fieldName]: value }));\r\n  }\r\n\r\n  // Handle executive selection\r\n  function addExecutive(executive) {\r\n    setSelectedExecutives([...selectedExecutives, executive]);\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      executives: [...prev.executives, executive.id],\r\n    }));\r\n  }\r\n\r\n  // Handle executive removal\r\n  function removeExecutive(executiveId) {\r\n    setSelectedExecutives(prev => prev.filter(e => e.id !== executiveId));\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      executives: prev.executives.filter(id => id !== executiveId),\r\n    }));\r\n  }\r\n\r\n  // Handle logo file selection\r\n  function selectLogoFile(event) {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Validate file\r\n    if (!file.type.startsWith('image/')) {\r\n      showMessage('Please select an image file', 'error');\r\n      return;\r\n    }\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      showMessage('File size must be less than 5MB', 'error');\r\n      return;\r\n    }\r\n\r\n    setLogoFile(file);\r\n    showMessage('');\r\n  }\r\n\r\n  // Upload logo to storage\r\n  async function uploadLogo(file) {\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${Date.now()}-${Math.random()}.${fileExt}`;\r\n\r\n    const { error } = await supabase.storage.from('cso-logos').upload(fileName, file);\r\n\r\n    if (error) throw error;\r\n\r\n    const {\r\n      data: { publicUrl },\r\n    } = supabase.storage.from('cso-logos').getPublicUrl(fileName);\r\n\r\n    return publicUrl;\r\n  }\r\n\r\n  // Handle form submission\r\n  async function createCSO(event) {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Validate required fields\r\n      if (!formData.name || !formData.cluster) {\r\n        throw new Error('Name and cluster are required');\r\n      }\r\n\r\n      // Upload logo if selected\r\n      let logo_url = null;\r\n      if (logoFile) {\r\n        logo_url = await uploadLogo(logoFile);\r\n      }\r\n\r\n      // Create CSO record\r\n      const { data: cso, error } = await supabase\r\n        .from('cso')\r\n        .insert([\r\n          {\r\n            name: formData.name,\r\n            description: formData.description,\r\n            cluster: formData.cluster,\r\n            subscription: formData.subscription,\r\n            logo_url,\r\n          },\r\n        ])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      // Link executives if any selected\r\n      if (formData.executives.length > 0) {\r\n        const links = formData.executives.map(execId => ({\r\n          cso_id: cso.id,\r\n          exec_id: execId,\r\n          portfolio: 'Member',\r\n          can_post: true,\r\n          start_date: new Date().toISOString().split('T')[0],\r\n        }));\r\n\r\n        const { error: linkError } = await supabase.from('cso_exec').insert(links);\r\n\r\n        if (linkError) throw linkError;\r\n      }\r\n\r\n      // Success - redirect\r\n      showMessage('CSO created successfully!', 'success');\r\n      setTimeout(() => navigate('/CSO'), 2000);\r\n    } catch (error) {\r\n      showMessage(error.message || 'Failed to create CSO', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"add-cso-container\">\r\n      <h1>Add a club, society, or organization</h1>\r\n\r\n      {message && <p className={`status-message ${messageType}`}>{message}</p>}\r\n\r\n      <form onSubmit={createCSO} className=\"cso-form\">\r\n        {/* Logo Upload */}\r\n        <label>\r\n          Logo\r\n          <input type=\"file\" accept=\"image/*\" onChange={selectLogoFile} />\r\n          <small>Upload an image file (max 5MB)</small>\r\n        </label>\r\n\r\n        {/* CSO Name */}\r\n        <label>\r\n          CSO Name *\r\n          <input\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={e => updateField('name', e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        {/* Description */}\r\n        <label>\r\n          Description\r\n          <textarea\r\n            value={formData.description}\r\n            onChange={e => updateField('description', e.target.value)}\r\n            rows=\"3\"\r\n          />\r\n        </label>\r\n\r\n        {/* Cluster Selection */}\r\n        <label>\r\n          Cluster *\r\n          <select\r\n            value={formData.cluster}\r\n            onChange={e => updateField('cluster', e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">Select a cluster...</option>\r\n            <option value=\"political\">Political Cluster</option>\r\n            <option value=\"academic\">Academic Cluster</option>\r\n            <option value=\"social\">Social Cluster</option>\r\n            <option value=\"cultural\">Cultural Cluster</option>\r\n            <option value=\"religious\">Religious Cluster</option>\r\n            <option value=\"sport\">WITS Sport</option>\r\n            <option value=\"council\">School Council</option>\r\n          </select>\r\n        </label>\r\n\r\n        {/* Subscription Required */}\r\n        <fieldset className=\"subscription\">\r\n          <legend>Subscription Required</legend>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"no\"\r\n              checked={formData.subscription === 'no'}\r\n              onChange={e => updateField('subscription', e.target.value)}\r\n            />\r\n            No\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"yes\"\r\n              checked={formData.subscription === 'yes'}\r\n              onChange={e => updateField('subscription', e.target.value)}\r\n            />\r\n            Yes\r\n          </label>\r\n        </fieldset>\r\n\r\n        {/* Executive Selection */}\r\n        <fieldset>\r\n          <legend>Executive(s)</legend>\r\n          <ExecutiveSearch\r\n            executives={executives}\r\n            selectedExecutives={selectedExecutives}\r\n            onAdd={addExecutive}\r\n            onRemove={removeExecutive}\r\n          />\r\n        </fieldset>\r\n\r\n        {/* Form Actions */}\r\n        <section className=\"form-actions\">\r\n          <button type=\"submit\" disabled={loading} className=\"btn btn-primary\">\r\n            {loading ? 'Creating CSO...' : 'Add CSO'}\r\n          </button>\r\n          <button type=\"button\" onClick={() => navigate('/CSO')} className=\"btn btn-secondary\">\r\n            Cancel\r\n          </button>\r\n        </section>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AddCSO;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}