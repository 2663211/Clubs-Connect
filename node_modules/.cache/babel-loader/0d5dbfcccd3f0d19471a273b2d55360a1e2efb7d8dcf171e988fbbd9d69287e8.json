{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs Connect\\\\Clubs-Connect\\\\src\\\\components\\\\ExecPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExecPost() {\n  _s();\n  const [caption, setCaption] = useState('');\n  const [file, setFile] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch logged-in user\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      setUser(user);\n    };\n    fetchUser();\n    const {\n      data: listener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    });\n    return () => listener.subscription.unsubscribe();\n  }, []);\n  const handleFileChange = e => setFile(e.target.files[0]);\n  const handleSubmit = async () => {\n    if (!user) return alert('You must be logged in to post.');\n    if (!file) return alert('Please select a file.');\n    setLoading(true);\n    try {\n      // 1. Upload file to Supabase Storage\n      const fileExt = file.name.split('.').pop();\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\n      const {\n        error: uploadError\n      } = await supabase.storage.from('media').upload(filePath, file);\n      if (uploadError) throw uploadError;\n      const {\n        data\n      } = supabase.storage.from('media').getPublicUrl(filePath);\n      const mediaUrl = data.publicUrl;\n      const mediaType = file.type.startsWith('image') ? 'image' : file.type.startsWith('video') ? 'video' : 'audio';\n\n      // 2. Insert post (no profile_id)\n      const {\n        error: insertError\n      } = await supabase.from('posts').insert([{\n        caption,\n        media_url: mediaUrl,\n        media_type: mediaType\n      }]);\n      if (insertError) throw insertError;\n      alert('Post created successfully!');\n      setCaption('');\n      setFile(null);\n    } catch (err) {\n      console.error(err);\n      alert('Error creating post: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '1rem auto',\n      padding: '1rem',\n      border: '1px solid #ccc',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Write your caption...\",\n      value: caption,\n      onChange: e => setCaption(e.target.value),\n      rows: 4,\n      style: {\n        width: '100%',\n        marginBottom: '1rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      style: {\n        marginBottom: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading,\n      style: {\n        padding: '0.5rem 1rem',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: loading ? 'Posting...' : 'Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(ExecPost, \"2iktj8Vst1wVNc5AhITKmyOIZEI=\");\n_c = ExecPost;\nvar _c;\n$RefreshReg$(_c, \"ExecPost\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","ExecPost","_s","caption","setCaption","file","setFile","user","setUser","loading","setLoading","fetchUser","data","auth","getUser","listener","onAuthStateChange","_event","session","subscription","unsubscribe","handleFileChange","e","target","files","handleSubmit","alert","fileExt","name","split","pop","filePath","id","Date","now","error","uploadError","storage","from","upload","getPublicUrl","mediaUrl","publicUrl","mediaType","type","startsWith","insertError","insert","media_url","media_type","err","console","message","style","maxWidth","margin","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","rows","width","marginBottom","onClick","disabled","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Programming/Clubs Connect/Clubs-Connect/src/components/ExecPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nexport default function ExecPost() {\r\n  const [caption, setCaption] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch logged-in user\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser();\r\n      setUser(user);\r\n    };\r\n    fetchUser();\r\n\r\n    const { data: listener } = supabase.auth.onAuthStateChange(\r\n      (_event, session) => {\r\n        setUser(session?.user || null);\r\n      }\r\n    );\r\n\r\n    return () => listener.subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => setFile(e.target.files[0]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!user) return alert('You must be logged in to post.');\r\n    if (!file) return alert('Please select a file.');\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // 1. Upload file to Supabase Storage\r\n      const fileExt = file.name.split('.').pop();\r\n      const filePath = `${user.id}/${Date.now()}.${fileExt}`;\r\n\r\n      const { error: uploadError } = await supabase.storage\r\n        .from('media')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      const { data } = supabase.storage.from('media').getPublicUrl(filePath);\r\n      const mediaUrl = data.publicUrl;\r\n\r\n      const mediaType = file.type.startsWith('image')\r\n        ? 'image'\r\n        : file.type.startsWith('video')\r\n          ? 'video'\r\n          : 'audio';\r\n\r\n      // 2. Insert post (no profile_id)\r\n      const { error: insertError } = await supabase.from('posts').insert([\r\n        {\r\n          caption,\r\n          media_url: mediaUrl,\r\n          media_type: mediaType,\r\n        },\r\n      ]);\r\n\r\n      if (insertError) throw insertError;\r\n\r\n      alert('Post created successfully!');\r\n      setCaption('');\r\n      setFile(null);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error creating post: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: '600px',\r\n        margin: '1rem auto',\r\n        padding: '1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '8px',\r\n      }}\r\n    >\r\n      <h2>Create Post</h2>\r\n\r\n      <textarea\r\n        placeholder=\"Write your caption...\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n        rows={4}\r\n        style={{ width: '100%', marginBottom: '1rem', padding: '0.5rem' }}\r\n      />\r\n\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n        style={{ marginBottom: '1rem' }}\r\n      />\r\n\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={loading}\r\n        style={{\r\n          padding: '0.5rem 1rem',\r\n          backgroundColor: '#007bff',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '5px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {loading ? 'Posting...' : 'Post'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}